# generated by appcreator
import django_tables2 as tables

from .models import Event, Work, Place, Person, Institution, Wab


class ResultsTable(tables.Table):
    id = tables.LinkColumn(verbose_name="ID")
    main_text = tables.columns.TemplateColumn(
        template_code="{{ record.main_text|safe }}"
    )

    class Meta:
        model = Event
        fields = (
            "id",
            "date_written",
            "main_text",
        )
        sequence = ("id",)
        attrs = {"class": "table table-responsive table-hover"}


class InstitutionTable(tables.Table):

    id = tables.LinkColumn(verbose_name="ID")

    class Meta:
        model = Institution
        sequence = ("id",)
        attrs = {"class": "table table-responsive table-hover"}


class PersonTable(tables.Table):

    id = tables.LinkColumn(verbose_name="ID")

    class Meta:
        model = Person
        sequence = ("id",)
        attrs = {"class": "table table-responsive table-hover"}


class PlaceTable(tables.Table):

    id = tables.LinkColumn(verbose_name="ID")

    class Meta:
        model = Place
        sequence = ("id",)
        attrs = {"class": "table table-responsive table-hover"}


class EventTable(tables.Table):

    id = tables.LinkColumn(verbose_name="ID")
    person = tables.columns.ManyToManyColumn(verbose_name="Erwähnte Personen")
    # place = tables.columns.ManyToManyColumn(
    #     verbose_name="Erwähnte Orte"
    # )
    # institution = tables.columns.ManyToManyColumn()
    # key_word = tables.columns.ManyToManyColumn(
    #     verbose_name="Schalgwörter"
    # )
    work = tables.columns.ManyToManyColumn(verbose_name="Bibliographie")
    wab = tables.columns.ManyToManyColumn(verbose_name="Erwähnte Bruckner Werke")
    main_text = tables.columns.TemplateColumn(
        template_code="{{ record.main_text|safe }}"
    )
    notes_lit = tables.columns.TemplateColumn(
        template_code="{{ record.notes_lit|safe }}",
        verbose_name="Anmerkungen Literatur",
    )
    notes_img = tables.columns.TemplateColumn(
        template_code="{{ record.notes_img|safe }}",
        verbose_name="Anmerkungen Abbildungen",
    )
    notes_facs = tables.columns.TemplateColumn(
        template_code="{{ record.notes_facs|safe }}",
        verbose_name="Anmerkungen Faksimiles",
    )
    notes_archive = tables.columns.TemplateColumn(
        template_code="{{ record.notes_archive|safe }}",
        verbose_name="Anmerkungen Archiv",
    )
    notes_text = tables.columns.TemplateColumn(
        template_code="{{ record.notes_text|safe }}", verbose_name="Anmerkungen Text"
    )
    note = tables.columns.TemplateColumn(
        template_code="{{ record.note|safe }}", verbose_name="Anmerkungen Text"
    )

    class Meta:
        model = Event
        sequence = (
            "id",
            "date_written",
            "main_text",
        )
        attrs = {"class": "table table-responsive table-hover"}


class WorkTable(tables.Table):

    id = tables.LinkColumn(verbose_name="ID")
    full_quote = tables.columns.TemplateColumn(
        template_code="{{ record.full_quote|safe }}", verbose_name="Langzitat"
    )

    class Meta:
        model = Work
        sequence = ("id",)
        attrs = {"class": "table table-responsive table-hover"}


class WabTable(tables.Table):

    id = tables.LinkColumn(verbose_name="ID")

    class Meta:
        model = Wab
        sequence = (
            "id",
            "wab_id",
        )
        attrs = {"class": "table table-responsive table-hover"}
